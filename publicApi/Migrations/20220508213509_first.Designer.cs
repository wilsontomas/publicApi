// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using publicApi.Dal;

namespace publicApi.Migrations
{
    [DbContext(typeof(DbUsuarioContext))]
    [Migration("20220508213509_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("publicApi.Model.Models.Tareas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("message")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)")
                        .HasColumnName("message");

                    b.Property<string>("name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("name");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    b.HasKey("id");

                    b.HasIndex("usuarioId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("publicApi.Model.Models.usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("firstName");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("lastName");

                    b.Property<string>("passwordHash")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("passwordHash");

                    b.Property<string>("passwordSalt")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("passwordSalt");

                    b.Property<int>("typeId")
                        .HasColumnType("int")
                        .HasColumnName("typeId");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("userName");

                    b.HasKey("id");

                    b.HasIndex("typeId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("publicApi.Model.Models.usuarioType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("name");

                    b.HasKey("id");

                    b.ToTable("usuarioType");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Usuario normal"
                        },
                        new
                        {
                            id = 2,
                            name = "Usuario admin"
                        });
                });

            modelBuilder.Entity("publicApi.Model.Models.Tareas", b =>
                {
                    b.HasOne("publicApi.Model.Models.usuario", "usuario")
                        .WithMany("tareas")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("publicApi.Model.Models.usuario", b =>
                {
                    b.HasOne("publicApi.Model.Models.usuarioType", "usuarioTypes")
                        .WithMany("usuarios")
                        .HasForeignKey("typeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuarioTypes");
                });

            modelBuilder.Entity("publicApi.Model.Models.usuario", b =>
                {
                    b.Navigation("tareas");
                });

            modelBuilder.Entity("publicApi.Model.Models.usuarioType", b =>
                {
                    b.Navigation("usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
